# app.yaml
runtime: php
env: flex

runtime_config:
  operating_system: "ubuntu22"
  document_root: public
  runtime_version: "8.4"

handlers:
- url: /.*
  script: auto

env_variables:
  APP_NAME: Laravel
  APP_ENV: production
  APP_KEY: base64:kud1DoXb402k2vtxMZyNxUID5CIjBsdsqwiXZVTpAwY=
  APP_DEBUG: false
  APP_URL: https://djokicoding.asia-southeast2.r.appspot.com

  APP_LOCALE: en
  APP_FALLBACK_LOCALE: en
  APP_FAKER_LOCALE: en_US

  DB_CONNECTION: mysql
  DB_HOST: /cloudsql/djokicoding:asia-southeast2:djokicoding-db-mysql
  DB_PORT: 3306
  DB_DATABASE: djokidb
  DB_USERNAME: root
  DB_PASSWORD: root1234

  SESSION_DRIVER: database
  CACHE_DRIVER: database

  FILESYSTEM_DISK: local

  QUEUE_CONNECTION: database

  MAIL_MAILER: log
  MAIL_FROM_ADDRESS: "noreply@djokicoding.com"
  MAIL_FROM_NAME: "${APP_NAME}"

beta_settings:
  cloud_sql_instances: djokicoding:asia-southeast2:djokicoding-db-mysql

automatic_scaling:
  min_num_instances: 1
  max_num_instances: 5

# Hapus atau kosongkan entrypoint di app.yaml karena sudah didefinisikan di Procfile
# entrypoint: 'composer install --no-dev --optimize-autoloader && php artisan optimize:clear && php-fpm'
# Jika Anda ingin mempertahankan composer install, Anda bisa memindahkan ini ke `hooks`
# Atau biarkan kosong jika Buildpack sudah pintar untuk ini.
# Untuk Buildpacks, `composer install` akan dijalankan secara otomatis.
# Kita hanya perlu membersihkan cache.

# Mari kita kosongkan entrypoint untuk saat ini karena Buildpack akan handle startup Nginx/PHP-FPM.
# Composer install dan optimize:clear biasanya juga dijalankan otomatis oleh Buildpack.
entrypoint: '' # Biarkan kosong atau hapus baris ini sepenuhnya